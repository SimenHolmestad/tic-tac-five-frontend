import { sliceBoard } from './BoardTransformFunctions';

describe('sliceBoard tests', () => {
  test('Board with same specifications returns same board', () => {
    const board = [["X", "-", "-", "-", "O"],
                   ["-", "-", "-", "-", "-"],
                   ["-", "-", "-", "-", "-"],
                   ["-", "-", "-", "-", "-"],
                   ["O", "-", "-", "-", "X"]];

    expect(sliceBoard(board, 2, 2, 5, 5)).toEqual(
      [["X", "-", "-", "-", "O"],
       ["-", "-", "-", "-", "-"],
       ["-", "-", "-", "-", "-"],
       ["-", "-", "-", "-", "-"],
       ["O", "-", "-", "-", "X"]]
    );
  });

  test('Slice the board', () => {
    const board = [["X", "-", "-", "-", "O"],
                   ["-", "-", "-", "X", "-"],
                   ["-", "-", "-", "-", "-"],
                   ["-", "-", "-", "O", "-"],
                   ["O", "-", "X", "-", "X"]];
    expect(sliceBoard(board, 3, 3, 3, 3)).toEqual(
      [["-", "-", "-"],
       ["-", "O", "-"],
       ["X", "-", "X"]]
    );

    expect(sliceBoard(board, 1, 3, 3, 3)).toEqual(
      [["-", "-", "O"],
       ["-", "X", "-"],
       ["-", "-", "-"]]
    );

    expect(sliceBoard(board, 3, 1, 3, 3)).toEqual(
      [["-", "-", "-"],
       ["-", "-", "-"],
       ["O", "-", "X"]]
    );
  });

  test('Slice outside the board', () => {
    const board = [["X", "-", "-", "-", "O"],
                   ["-", "-", "-", "X", "-"],
                   ["-", "-", "-", "-", "-"],
                   ["-", "-", "-", "O", "-"],
                   ["O", "-", "X", "-", "X"]];
    expect(sliceBoard(board, 4, 4, 3, 3)).toEqual(
      [["O", "-", "-"],
       ["-", "X", "-"],
       ["-", "-", "-"]]
    );

    expect(sliceBoard(board, 0, 4, 3, 3)).toEqual(
      [["-", "-", "-"],
       ["-", "O", "-"],
       ["X", "-", "-"]]
    );

    expect(sliceBoard(board, 4, 0, 3, 3)).toEqual(
      [["-", "-", "-"],
       ["-", "O", "-"],
       ["-", "-", "-"]]
    );
  });

  test('Test 21x21 board', () => {
    const board = [
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'O', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', 'O', '-', 'O', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', 'X', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', 'X', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', 'O', '-', '-', 'O', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-'],
      ['-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-', '-']
    ]
    expect(sliceBoard(board, 12, 7, 7, 7)).toEqual(
      [['-', '-', 'X', '-', '-', '-', '-'],
       ['-', '-', '-', '-', '-', '-', 'X'],
       ['-', '-', '-', '-', '-', '-', '-'],
       ['-', '-', '-', 'O', '-', 'O', '-'],
       ['-', '-', 'X', '-', '-', '-', '-'],
       ['-', '-', '-', '-', '-', 'X', '-'],
       ['-', 'O', '-', '-', 'O', '-', '-']]
    );
  })
});
